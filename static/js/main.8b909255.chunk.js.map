{"version":3,"sources":["components/NavBar.js","components/Footer.js","components/Hero.js","pages/Games.js","components/PostList.js","pages/Blog.js","pages/Contact.js","pages/About.js","pages/Post.js","pages/NotFound.js","App.js","serviceWorker.js","index.js","assets/nola-poster-2.jpeg"],"names":["Styles","styled","div","NavBar","Navbar","className","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","Footer","Date","getFullYear","Hero","props","Jumbotron","fluid","Container","Row","Col","Image","src","image","rounded","title","description","Games","nolaImg","imageAlt","PostList","excerptList","postlist","map","post","content","split","slice","join","console","log","length","i","key","date","author","source","escapeHtml","Blog","Contact","About","Post","validId","parseInt","match","params","fetchedPost","postExist","forEach","NotFound","App","exact","path","component","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.8b909255.chunk.js","sourcesContent":["import React from 'react'\nimport { Navbar, Nav} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Styles = styled.div`\n    .navbar{\n        padding:1em 3em;\n        font-family: 'Poppins', sans-serif;\n        font-weight: 700;\n    }\n`;\n\nfunction NavBar() {\n    return (\n        <Styles>\n            <Navbar className=\"navbar\">\n                <Navbar.Brand as ={Link} to='/'>Nobak Entertainment</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link as={Link} to='/'>Games</Nav.Link>\n                        <Nav.Link as={Link} to='/blog'>Blog</Nav.Link>\n                        <Nav.Link as={Link} to='/about'>About</Nav.Link>\n                        <Nav.Link as={Link} to='/contact'>Contact Us</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </Styles>\n    )\n}\nexport default NavBar;","import React from 'react'\nimport styled from 'styled-components';\n\n\nconst Styles = styled.div`\n    .footer{\n        font-family: 'Merriweather', serif;\n        text-align:center;\n    }\n`;\n\nfunction Footer() {\n    return (\n        <Styles>\n            <div className=\"footer\">\n                <hr/>\n                <p>&copy; NOBAK ENTERTAINMENT, INC. ALL RIGHTS RESERVED. {new Date().getFullYear()}</p>\n            </div>\n        </Styles>\n    )\n}\n\nexport default Footer;","import React from 'react'\nimport { Jumbotron, Container ,Row, Col,Image} from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n    .jumbotron{\n        height:100vh;\n        background-color:white;\n    }\n    .jumbo-image{\n        width:25em;\n        margin-left:5em;\n    }\n    .jumbo-text{\n        margin:auto 0;\n    }\n    .jumbo-title{\n        text-decoration:underline;\n        margin-bottom: 1em;\n    }\n`;\n\nfunction Hero(props) {\n    return (\n        <Styles>\n            <Jumbotron fluid>\n                <Container className=\"jumbo-container align-content-center\">\n                    <Row>\n                        <Col>\n                            <Image className=\"jumbo-image\" src={props.image} rounded />\n                        </Col>\n                        <Col className=\"jumbo-text\">\n                            <h1 className=\"jumbo-title\">{props.title}</h1>\n                            <p className=\"jumbo-desc\">{props.description}</p>\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n        </Styles>\n    )\n}\n\nexport default Hero;","import React from 'react'\nimport Hero from '../components/Hero';\nimport nolaImg from '../assets/nola-poster-2.jpeg';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n    .hero-div{\n    }\n`;\n\nfunction Games() {\n    return (\n        <Styles>\n            <div className=\"hero-div\">\n            <Hero image={nolaImg} imageAlt=\"nola-poster\" title=\"Nola Swifty\" description=\"How fast are you or how strong are your reflexes? Nola wants to get rid of the deadly enemies one by one and reach the diamonds. Can you help Nola?\nNola Swifty is an entertaining game that will take you away from everything with its great design and music. Even a race! Run your longest run in challenging endless stages!\" />\n            </div>\n        </Styles>\n    )\n}\n\nexport default Games;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport postlist from '../posts.json'\nimport Markdown from 'react-markdown'\n\nfunction PostList() {\n    const excerptList = postlist.map(post => {\n        return post.content.split(\" \").slice(0, 20).join(\" \")\n    })\n\n    console.log(excerptList)\n    return (\n        <div className=\"postlist\">\n            <h1 className=\"title\">All Posts</h1>\n            {postlist.length &&\n                postlist.map((post, i) => {\n                    return (\n                        <div key={i} className=\"post-card\">\n                            <h2><Link to={`/post/${post.id}`}>{post.title}</Link></h2>\n                            <small>Published on {post.date} by {post.author}</small>\n                            <hr />\n                            <Markdown source={excerptList[i]} escapeHtml={false} />\n                            <small><Link to={`/post/${post.id}`}>Read More...</Link></small>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default PostList\n","import React from 'react'\nimport { Row,Col } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport PostList from '../components/PostList'\n\nconst Styles = styled.div`\n    .postlist{\n        padding-top:3em;\n        width: 40%;\n        margin: auto;\n        text-align: center;\n    }\n    .title{\n        margin-bottom: 20px;\n        font-size:2em;\n    }\n\n    .post-card{\n        text-align:left;\n        font-family: 'Poppins', sans-serif;\n        border:1px solid lightblue;\n        margin-bottom:20px;\n        padding:1em;\n    }\n`;\n\nfunction Blog() {\n    return (\n        <Styles>\n            <Row>\n                <Col>\n                    <PostList />\n                </Col>\n            </Row>\n        </Styles>\n    )\n}\n\nexport default Blog;","import React from 'react'\nimport Hero from '../components/Hero';\n\nfunction Contact() {\n    return (\n        <div>\n            <Hero />\n        </div>\n\n    )\n}\n\nexport default Contact;","import React from 'react'\nimport Hero from '../components/Hero';\n\nfunction About() {\n    return (\n        <div>\n            <Hero />\n        </div>\n    )\n}\n\nexport default About;","import React from 'react'\nimport { Redirect } from \"react-router-dom\"\nimport postlist from '../posts.json'\nimport Markdown from 'react-markdown'\nimport styled from 'styled-components'\n\nconst Styles = styled.div`\n    .post{\n        width: 40%;\n        margin:auto;\n    }\n`;\n\nfunction Post(props) {\n    const validId = parseInt(props.match.params.id)\n    if (!validId) {\n        return <Redirect to=\"/404\" />\n    }\n\n    const fetchedPost = {}\n    let postExist = false\n    postlist.forEach((post, i) => {\n        if (validId === post.id) {\n            fetchedPost.title = post.title ? post.title : \"No title given\"\n            fetchedPost.date = post.date ? post.date : \"No date given\"\n            fetchedPost.author = post.author ? post.author : \"No author given\"\n            fetchedPost.content = post.content ? post.content : \"No content given\"\n            postExist = true\n        }\n    })\n    if (postExist === false) {\n        return <Redirect to=\"/404\" />\n\n    }\n    console.log(fetchedPost)\n    return (\n        <Styles>\n            <div className=\"post\">\n                <h2>{fetchedPost.title}</h2>\n                <small>Published on {fetchedPost.date} by {fetchedPost.author}</small>\n                <hr />\n                <Markdown source={fetchedPost.content} escapeHtml={false} />\n            </div>\n        </Styles>\n    )\n}\n\nexport default Post","import React from 'react'\n\nfunction NotFound() {\n    return (\n        <div>\n            <h1>The page you are looking for doesn't exist</h1>\n        </div>\n    )\n}\n\nexport default NotFound;\n","import React from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Footer from './components/Footer';\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Games from './pages/Games';\nimport Blog from './pages/Blog'\nimport Contact from './pages/Contact';\nimport About from './pages/About';\nimport Post from './pages/Post';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Games} />\n          <Route path=\"/blog\" component={Blog} />\n          <Route path=\"/contact\" component={Contact} /> \n          <Route path=\"/about\" component={About} />\n          <Route path=\"/404\" component={NotFound} />\n          <Route path=\"/post/:id\" render={props => <Post {...props}/>}/>\n        </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"typeface-poppins\"\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <HashRouter >\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/nola-poster-2.24a5b52e.jpeg\";"],"sourceRoot":""}